{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","item","amount","category","groceries","setGroceries","grocery","setGrocery","handleChange","e","target","name","value","prevInput","useEffect","fetch","then","res","ok","json","jsonRes","className","onChange","onClick","preventDefault","newGrocery","axios","post","alert","map","id","_id","delete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAAe,I,4BC0FAA,MArFf,WACE,MAAkCC,mBAAS,CACzC,CACEC,KAAM,GACNC,OAAQ,GACRC,SAAU,MAJd,mBAAOC,EAAP,KAAkBC,EAAlB,KAQA,EAA8BL,mBAC5B,CACEC,KAAM,GACNC,OAAQ,GACRC,SAAU,KAJd,mBAAOG,EAAP,KAAgBC,EAAhB,KAkBE,SAASC,EAAaC,GAEpB,MAAsBA,EAAEC,OAAjBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAEbL,GAAW,SAAAM,GACT,kCAEOA,GAFP,kBAGKF,EAAOC,OAyBlB,OA1CEE,qBAAU,WACRC,MAAM,cAAcC,MAAK,SAAAC,GACvB,GAAGA,EAAIC,GACL,OAAOD,EAAIE,UAGZH,MAAK,SAAAI,GAAO,OAAIf,EAAae,SAqClC,sBAAKC,UAAU,MAAf,UACE,0DACA,iCACE,uBAAOC,SAAUd,EAAcG,KAAK,OAAOC,MAAON,EAAQL,OAC1D,uBAAOqB,SAAUd,EAAcG,KAAK,SAASC,MAAON,EAAQJ,SAC5D,uBAAOoB,SAAUd,EAAcG,KAAK,WAAWC,MAAON,EAAQH,WAC9D,wBAAQoB,QAzBd,SAAoBd,GAClBA,EAAEe,iBAEF,IAAMC,EAAa,CACjBxB,KAAMK,EAAQL,KACdC,OAAQI,EAAQJ,OAChBC,SAAUG,EAAQH,UAGpBuB,IAAMC,KAAK,cAAeF,GAC1BG,MAAM,+BAeF,yBAEDxB,EAAUyB,KAAI,SAAAvB,GACb,OACA,gCAEE,6BAAKA,EAAQL,OACb,4BAAIK,EAAQJ,SACZ,4BAAII,EAAQH,WACZ,wBAAQoB,QAAS,kBArBFO,EAqBsBxB,EAAQyB,IApBnDL,IAAMM,OAAO,WAAaF,QAC1BF,MAAM,kCAFR,IAAuBE,GAqBf,8BCrEKG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.16516438.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [groceries, setGroceries] = useState([\n    {\n      item: '',\n      amount: '',\n      category: '',\n    }\n  ])\n\n  const [grocery, setGrocery] = useState(\n    {\n      item: '',\n      amount: '',\n      category: '',\n    }\n  )\n\n    //fetch the data from the route and return a json\n    useEffect(() => {\n      fetch('/groceries').then(res => {\n        if(res.ok) {\n          return res.json()\n        }\n        //take json response and set state equal to the json response\n      }).then(jsonRes => setGroceries(jsonRes))\n    })\n   \n    function handleChange(e) {\n      //deconstruct the event\n      const {name, value} = e.target;\n\n      setGrocery(prevInput => {\n        return(\n          {\n            ...prevInput,\n            [name]: value\n            \n          }\n        )\n      })\n    }\n\n  function addGrocery(e) {\n    e.preventDefault();\n\n    const newGrocery = {\n      item: grocery.item,\n      amount: grocery.amount,\n      category: grocery.category\n    }\n\n    axios.post('/newgrocery', newGrocery)\n    alert(\"Grocery Item Added To List\");\n  }\n\n  function deleteGrocery(id) {\n    axios.delete('/delete/' + id);\n    alert(\"Grocery Item Deleted From List\")\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>ADD ITEM TO GROCERY LIST</h1>\n      <form>\n        <input onChange={handleChange} name=\"item\" value={grocery.item}></input>\n        <input onChange={handleChange} name=\"amount\" value={grocery.amount}></input>\n        <input onChange={handleChange} name=\"category\" value={grocery.category}></input>\n        <button onClick={addGrocery}>ADD ITEM</button>\n      </form>\n      {groceries.map(grocery => {\n        return (\n        <div>\n\n          <h1>{grocery.item}</h1>\n          <p>{grocery.amount}</p>\n          <p>{grocery.category}</p>\n          <button onClick={() => deleteGrocery(grocery._id)}>DELETE</button>\n\n        </div>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}